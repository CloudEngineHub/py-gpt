Files and attachments
=====================

Input (upload)
-------
**PYGPT** facilitates an user-friendly process for uploading files (attachments) to the server and transferring them to the model, for purposes such as analysis. This functions in a way similar to attaching files using ``ChatGPT``. Adjacent to the window where text can be entered, there is another tab dedicated to file uploads called ``Files``. Files can be set to automatically delete after each upload or kept on the list for reuse.

The attachment feature is available in both the ``Assistant`` and ``Vision`` modes.

.. image:: images/v2_file_input.png
   :width: 800



Output (download, generation)
---------------
**PYGPT** allows for the reception of files generated by the model and their local saving. This process happens automatically in the background, and files are saved to the `output` directory created in the user's work directory. Access to received or generated files is found under the ``Output`` tab - there, youâ€™ll find a file browser for this directory. You can easily manage all the files received from the AI.

The same directory is also used to store all files generated by the AI locally, such as files with generated code or any other files that the model may be requested to produce. There is an option to execute code from the files saved here and read their content, then passing the result back to the AI. This all takes place automatically using the plugin system and commands invoked by the model.

File management in the ``output`` directory is facilitated by the ``Command: Files I/O`` plugin.
Execution of code from files saved in this directory is enabled by the ``Command: Code Interpreter`` plugin.

.. image:: images/v2_file_output.png
   :width: 800

To allow the model to manage files, the ``Execute commands`` option must be active, along with the above-mentioned plugins:

.. image:: images/v2_code_execute.png
   :width: 400